/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
  "/posts": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Returns all posts */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description All went well */
        200: {
          headers: Record<string, unknown>;
          content: {
            "application/json": components["schemas"]["post"];
          };
        };
      };
    };
    put?: never;
    /** Create a new post */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["post"];
        };
      };
      responses: {
        /** @description A post was created */
        200: {
          headers: Record<string, unknown>;
          content: {
            "application/json": components["schemas"]["post"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/posts/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description ID of the post */
        id: string;
      };
      cookie?: never;
    };
    /** Get a single post */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description ID of the post */
          id: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description All went well */
        200: {
          headers: Record<string, unknown>;
          content: {
            "application/json": components["schemas"]["post"];
          };
        };
        /** @description Post not found */
        404: {
          headers: Record<string, unknown>;
          content: {
            "application/json": Record<string, never>;
          };
        };
      };
    };
    /** Update a post */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description ID of the post */
          id: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["post"];
        };
      };
      responses: {
        /** @description All went well */
        200: {
          headers: Record<string, unknown>;
          content: {
            "application/json": components["schemas"]["post"];
          };
        };
        /** @description Post not found */
        404: {
          headers: Record<string, unknown>;
          content: {
            "application/json": Record<string, never>;
          };
        };
      };
    };
    post?: never;
    /** Delete a post */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          /** @description ID of the post */
          id: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description All went well */
        200: {
          headers: Record<string, unknown>;
          content: {
            "application/json": Record<string, never>;
          };
        };
        /** @description Post not found */
        404: {
          headers: Record<string, unknown>;
          content: {
            "application/json": Record<string, never>;
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
};
export type webhooks = Record<string, never>;
export type components = {
  schemas: {
    post: {
      /** @description ID of the post */
      id?: number;
      /** @description Title of the post */
      title?: string;
      /** @description Body of the post */
      body?: string;
      /** @description ID of the user who created the post */
      userId?: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
};
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
